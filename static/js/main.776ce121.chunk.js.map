{"version":3,"sources":["Components/Currencies.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Currencies","handleChange","evt","setState","target","name","value","calculateIncome","result","props","userIncome","targetRate","convertedIncome","toFixed","calculateSurplusShortage","newSurplusShortage","state","totalExpenses","surplusShortage","calculateTotalExpenses","newTotal","food","housing","bills","transport","entertainment","map","number","parseFloat","reduce","accumulator","currentValue","Swal","fire","text","showClass","popup","hideClass","bind","className","htmlFor","type","id","onChange","this","expensesArray","onClick","Intl","NumberFormat","format","targetCurrencyCode","Component","Footer","href","App","handleIncomeInputChange","event","incomeInput","isNaN","isIncomeValid","handleCurrentChange","userSelection","currentCurrencyCode","getCurrencies","handleTargetChange","targetSelection","axios","url","then","res","conversionCode","convertedRate","data","rates","catch","error","confirmButtonColor","countryNames","countries","newCountries","forEach","country","currencies","currency","currencyCode","code","push","class","index","key","parentCallback","callbackFunction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.776ce121.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// Import Packages\nimport Swal from \"sweetalert2\";\n\n\nclass Currencies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      housing: 0,\n      bills: 0,\n      entertainment: 0,\n      food: 0,\n      transport: 0,\n      convertedIncome: 0,\n      totalExpenses: 0,\n      surplusShortage: 0\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (evt) => {\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  calculateIncome = () => {\n    // result is the userIncome in the new currency.\n    let result = this.props.userIncome * this.props.targetRate;\n\n    this.setState({\n      convertedIncome: result.toFixed(2)\n    }, () => {\n      // call the surplus shortage function only when the convertedIncome is updated\n      this.calculateSurplusShortage()\n    })\n  }\n\n  calculateSurplusShortage = () => {\n    // get the annual expenses in the new currency\n    let newSurplusShortage = this.state.convertedIncome - this.state.totalExpenses\n    this.setState({\n      surplusShortage: newSurplusShortage.toFixed(2)\n    })\n  }\n\n\n\n  calculateTotalExpenses = () => {\n    // array to store all the string values from the state\n    let expensesArray = [\n      this.state.food,\n      this.state.housing,\n      this.state.bills,\n      this.state.transport,\n      this.state.entertainment\n    ]\n    // converting to array of numbers to use later in the calculation\n    let newExpensesArray = expensesArray.map(number => {\n      return parseFloat(number)\n    })\n\n\n    // building the calculation\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    // takes the number array and uses the reducer to calculate the total sum of expenses\n    let newTotal = newExpensesArray.reduce(reducer);\n    if (this.props.targetRate) {\n      this.setState(\n        {\n          totalExpenses: newTotal.toFixed(2),\n        },\n        () => {\n          this.calculateIncome()\n        }\n      )\n    } else {\n       Swal.fire({\n\t\t\t\t\ttext: `Please select target currency.`,\n\t\t\t\t\tshowClass: {\n\t\t\t\t\t\tpopup: 'animate__animated animate__fadeInDown',\n\t\t\t\t\t},\n\t\t\t\t\thideClass: {\n\t\t\t\t\t\tpopup: 'animate__animated animate__fadeOutUp',\n\t\t\t\t\t},\n\t\t\t\t})\n    }\n  }\n\n\n  render() {\n    return (\n\t\t\t<div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t  <div className=\"expenses\">\n\t\t\t\t\t\t<div className=\"expense\">\n\t\t\t\t\t\t\t<label htmlFor=\"\">Housing</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"housing\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"housing\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.expensesArray}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"expense\">\n\t\t\t\t\t\t\t<label htmlFor=\"\">Bills</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"bills\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"bills\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.expensesArray}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"expense\">\n\t\t\t\t\t\t\t<label htmlFor=\"\">Food</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"food\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"food\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.expensesArray}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"expense\">\n\t\t\t\t\t\t\t<label htmlFor=\"\">Transport</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"transport\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"transport\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.expensesArray}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"expense\">\n\t\t\t\t\t\t\t<label htmlFor=\"\">Entertainment</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"entertainment\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"entertainment\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.expensesArray}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"totalExpenses\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"calculateTotal\"\n\t\t\t\t\t\t\t\tonClick={this.calculateTotalExpenses}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCalculate Total\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{/* use conditional statement to display */}\n\t\t\t\t\t\t\t<p>Total: ${this.state.totalExpenses}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        <section className=\"resultsSection\">\n\t\t\t\t\t<div className=\"wrapper\">\n            <div className=\"results\">\n              <h2>\n                Your <span className=\"lineOne\">Future</span> Financial Status\n              </h2>\n              <p>\n                You are making: <br />\n                <span className=\"resultStyle\">\n                  ${new Intl.NumberFormat().format(this.state.convertedIncome)}\n                </span>\n                &nbsp;\n                {this.props.targetCurrencyCode}\n              </p>\n\n              {this.state.surplusShortage > 0 ? (\n                <p>\n                  Your surplus is: <br />\n                  <span className=\"resultStyle\">\n                    ${new Intl.NumberFormat().format(this.state.surplusShortage)}\n                  </span>\n                  &nbsp;\n                  {this.props.targetCurrencyCode}\n                </p>\n              ) : (\n                <p>\n                  Your shortage is: <br />\n                  <span className=\"resultStyle\">\n                    ${new Intl.NumberFormat().format(this.state.surplusShortage)}\n                  </span>\n                  &nbsp;\n                  {this.props.targetCurrencyCode}\n                </p>\n              )}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n        </section>\n\n\t\t\t</div>\n\t\t)\n  }\n}\nexport default Currencies;","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer id=\"contact\">\n      <div className=\"wrapper\">\n        <div className=\"footerContainer\">\n          <p>\n            &copy; 2020 Karmen Salim\n\t\t\t\t\t\t\t<a href=\"https://junocollege.com/\" className=\"junoFooterLink\">\n              <span> | Created at Juno College</span>\n            </a>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { Component } from 'react';\n\n// Import Packages\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\n\n// Import Components\nimport Currencies from './Components/Currencies';\nimport Footer from './Components/Footer'\n\n// Import Styles\nimport './App.css';\n\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcountryNames: [],\n\t\t\tcurrentCurrencyCode: '',\n\t\t\ttargetCurrencyCode: '',\n\t\t\tuserIncome: 0,\n\t\t\ttargetRate: 0,\n\t\t\tisIncomeValid: false,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// Create an axios call to retrieve data from each country\n\t\taxios({\n\t\t\turl: 'https://restcountries.eu/rest/v2/all',\n\t\t}).then((res) => {\n\t\t\t// With results, create a variable to store data\n\t\t\tconst countries = res.data\n\n\t\t\t// Create an empty array\n\t\t\tconst newCountries = []\n\t\t\t// Loop through each country's data\n\t\t\tcountries.forEach((country) => {\n\t\t\t\t// For each country, store the country name in a variable\n\t\t\t\tconst name = country.name\n\n\t\t\t\tconst countryCurrencies = country.currencies\n\t\t\t\tcountryCurrencies.forEach((currency) => {\n\t\t\t\t\tlet currencyCode = currency.code\n\n\t\t\t\t\tnewCountries.push({ name: name, currencyCode: currencyCode })\n\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcountryNames: newCountries,\n\t\t\t\t\t\tcurrentCurrencyCode: currencyCode,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\thandleIncomeInputChange = (event) => {\n\t\tconst incomeInput = event.target.value\n\n    // if income input is not a number, set state to true,\n    // which displays error message\n\t\tif (isNaN(incomeInput)) {\n\t\t\tthis.setState({\n\t\t\t\tisIncomeValid: true,\n\t\t\t})\n\t\t\t// if income input is an empty string, still display error message\n\t\t} else if (incomeInput === '') {\n\t\t\tthis.setState({\n\t\t\t\tisIncomeValid: true,\n\t\t\t\tuserIncome: incomeInput,\n\t\t\t})\n\t\t\t// otherwise, if user input is a number, remove error message\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tuserIncome: incomeInput,\n\t\t\t\tisIncomeValid: false,\n\t\t\t})\n\t\t}\n\t}\n\n\n\thandleCurrentChange = (event) => {\n\t\t// look at the value attribute on the dropdown option\n\t\tconst userSelection = event.target.value\n\t\t// send it to state\n\t\tthis.setState({\n\t\t\tcurrentCurrencyCode: userSelection,\n\t\t}, () => {\n      this.getCurrencies()\n    })\n\t}\n\n\n\thandleTargetChange = (event) => {\n\t\t// look at the value attribute on the dropdown option\n\t\tconst targetSelection = event.target.value\n\t\t// send it to state\n\t\tthis.setState({\n\t\t\ttargetCurrencyCode: targetSelection,\n\t\t}, () => {\n      this.getCurrencies()\n    })\n  }\n\n\n\tgetCurrencies = () => {\n\t\t// run this axios call\n\t\taxios({\n\t\t\t// using custom endpoint built with pieces of state\n\t\t\turl: `https://api.exchangeratesapi.io/latest?base=${this.state.currentCurrencyCode}&symbols=${this.state.targetCurrencyCode}`,\n\t\t})\n    .then((res) => {\n      // this gives us the target currency CODE\n      let conversionCode = this.state.targetCurrencyCode\n      // this is the rate of conversion\n      let convertedRate = res.data.rates[conversionCode]\n\n      this.setState({\n        targetRate: convertedRate,\n      })\n    })\n    .catch((error) => {\n      Swal.fire({\n\t\t\t\ttext: `Sorry, looks we don't have one of your currencies in our database yet, but we're working on it.`,\n\t\t\t\tshowClass: {\n\t\t\t\t\tpopup: 'animate__animated animate__fadeInDown',\n\t\t\t\t},\n\t\t\t\thideClass: {\n\t\t\t\t\tpopup: 'animate__animated animate__fadeOutUp',\n\t\t\t\t\tconfirmButtonColor: '#81003c',\n\t\t\t\t},\n\t\t\t})\n    })\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n        <header>\n          <div className=\"wrapper\">\n            <div class=\"headerContent\">\n              <h1><span>Remote </span> Work <span> Budget</span></h1>\n              <h2>Looking to work remotely?</h2>\n              <h2>\n                Use our budget calculator to check what would be your cost of living in different countries.\n              </h2>\n            </div>\n          </div>\n        </header>\n\t\t\t\t<div className=\"userIncomeSection\">\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<div className=\"step\">1</div>\n\t\t\t\t\t\t<h2>Enter Your Current Monthly Income</h2>\n\n\t\t\t\t\t\t<div className=\"incomeLabelInput\">\n\t\t\t\t\t\t\t<label htmlFor=\"incomeAmount\">Income Amount:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tid=\"incomeAmount\"\n\t\t\t\t\t\t\t\tvalue={this.state.userIncome}\n                onChange={this.handleIncomeInputChange}\n                className=\"income\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{this.state.isIncomeValid ? (\n\t\t\t\t\t\t\t\t<p className=\"errorMessage\">Please enter a number value.</p>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t\t<select onChange={this.handleCurrentChange}>\n\t\t\t\t\t\t\t\t{this.state.countryNames.map((country, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option value={country.currencyCode} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t{`${country.name} - ${country.currencyCode}`}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<section className=\"target\">\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<div className=\"step\">2</div>\n\t\t\t\t\t\t<h2>Enter Your Projected Monthly Budget in your New Destination</h2>\n\n\t\t\t\t\t\t<select onChange={this.handleTargetChange}>\n\t\t\t\t\t\t\t{this.state.countryNames.map((country, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option value={country.currencyCode} key={index}>\n\t\t\t\t\t\t\t\t\t\t{`${country.name} - ${country.currencyCode}`}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<Currencies\n\t\t\t\t\tcurrentCurrencyCode={this.state.currentCurrencyCode}\n\t\t\t\t\tparentCallback={this.callbackFunction}\n\t\t\t\t\ttargetRate={this.state.targetRate}\n\t\t\t\t\tuserIncome={this.state.userIncome}\n\t\t\t\t\ttargetCurrencyCode={this.state.targetCurrencyCode}\n\t\t\t\t/>\n        <Footer/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}